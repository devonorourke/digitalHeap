/Users/instructor/Desktop/GDW_Apps/sratoolkit/bin/fastq-dump \
--split-files \
--gzip \
--origfmt \
--readids \
ERR1938563

/Users/instructor/Desktop/GDW_Apps/FastQC/FastQC.app/Contents/MacOS/fastqc ERR1938563*fastq.gz

cat /Users/instructor/Desktop/GDW_Apps/Trimmomatic-0.36/adapters/*.fa > \
/Users/instructor/Desktop/DOLPH_VIRUS/all-adapters.fa

nano all-adapters.fa
#there were 3 headers needing a carriage return

java -jar /Users/instructor/Desktop/GDW_Apps/Trimmomatic-0.36/trimmomatic-0.36.jar \
PE \
-threads 2 \
-phred33 \
ERR1938563_1.fastq.gz \
ERR1938563_2.fastq.gz \
ERR1938563_1.trimmed.fastq.gz \
ERR1938563_1.trimmed.SE.fastq.gz \
ERR1938563_2.trimmed.fastq.gz \
ERR1938563_2.trimmed.SE.fastq.gz \
ILLUMINACLIP:all-adapters.fa:2:30:7 \
LEADING:20 \
TRAILING:20 \
SLIDINGWINDOW:4:20 \
AVGQUAL:20 \
MINLEN:100

#Questions:
##How many reads were trimmed? 11909 reads ~= 4.62%
	Input Read Pairs: 257617 
	Both Surviving: 212860 (82.63%) 
	Forward Only Surviving: 27300 (10.60%) 
	Reverse Only Surviving: 5548 (2.15%) 
	Dropped: 11909 (4.62%)
##How many are still paired? 212860 ~= 82.63%
##Has the quality improved? sure.
/Users/instructor/Desktop/GDW_Apps/FastQC/FastQC.app/Contents/MacOS/fastqc ERR1938563*fastqc *.trimmed*

#uncompress the trimmed sequencing reads and convert to FASTA format
gunzip -c ERR1938563_1.trimmed.fastq.gz | \
/Users/instructor/Desktop/GDW_Apps/seqtk-master/seqtk seq -A - > ERR1938563_1.trimmed.fasta
gunzip -c ERR1938563_2.trimmed.fastq.gz | \
/Users/instructor/Desktop/GDW_Apps/seqtk-master/seqtk seq -A - > ERR1938563_2.trimmed.fasta


# Download the UniVec database (FASTA format)
curl -O ftp://ftp.ncbi.nlm.nih.gov/pub/UniVec/UniVec_Core

# Build a blast database
makeblastdb \
-in UniVec_Core \
   -title UNIVEC \
   -out UNIVEC \
   -dbtype nucl

# Blast the forward and reverse sequencing reads
blastn \
-query ERR1938563_1.trimmed.fasta \
-db UNIVEC \
-num_threads 2 \
-outfmt 6 \
-out forward-contaminants.txt

blastn \
-query ERR1938563_2.trimmed.fasta \
-db UNIVEC \
-num_threads 2 \
-outfmt 6 \
-out reverse-contaminants.txt

#Did you find any contamination? nope for _1 or _2.

#count kmers (k=31) with dsk
~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk \
-file ERR1938563_1.trimmed.fastq.gz,ERR1938563_2.trimmed.fastq.gz \
-kmer-size 31 \
-nb-cores 2 \
-abundance-min 1 \
-max-memory 1000 \
-out k31.counts

# Parse the output by decompressing the file
~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk2ascii \
-file k31.counts.h5 \
-out k31.table

#make .txt file to plot
/Users/instructor/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/h5dump \
-y \
-d histogram/histogram \
k31.counts.h5 | \
grep "^\ *[0-9]" | \
tr -d " " | \
perl -ne 's/,\n/\t/; print' > k31.histogram.txt
	#see R script for plot

#repeat for kmer sizes of 15, 21, 27

#for 15
~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk \
-file ERR1938563_1.trimmed.fastq.gz,ERR1938563_2.trimmed.fastq.gz \
-kmer-size 15 \
-nb-cores 2 \
-abundance-min 1 \
-max-memory 1000 \
-out k15.counts

~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk2ascii \
-file k15.counts.h5 \
-out k15.table

/Users/instructor/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/h5dump \
-y \
-d histogram/histogram \
k15.counts.h5 | \
grep "^\ *[0-9]" | \
tr -d " " | \
perl -ne 's/,\n/\t/; print' > k15.histogram.txt

#for 21
~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk \
-file ERR1938563_1.trimmed.fastq.gz,ERR1938563_2.trimmed.fastq.gz \
-kmer-size 21 \
-nb-cores 2 \
-abundance-min 1 \
-max-memory 1000 \
-out k21.counts

~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk2ascii \
-file k21.counts.h5 \
-out k21.table

/Users/instructor/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/h5dump \
-y \
-d histogram/histogram \
k21.counts.h5 | \
grep "^\ *[0-9]" | \
tr -d " " | \
perl -ne 's/,\n/\t/; print' > k21.histogram.txt

#for 27
~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk \
-file ERR1938563_1.trimmed.fastq.gz,ERR1938563_2.trimmed.fastq.gz \
-kmer-size 27 \
-nb-cores 2 \
-abundance-min 1 \
-max-memory 1000 \
-out k27.counts

~/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/dsk2ascii \
-file k27.counts.h5 \
-out k27.table

/Users/instructor/Desktop/GDW_Apps/dsk-v2.2.0-bin-Darwin/bin/h5dump \
-y \
-d histogram/histogram \
k27.counts.h5 | \
grep "^\ *[0-9]" | \
tr -d " " | \
perl -ne 's/,\n/\t/; print' > k27.histogram.txt